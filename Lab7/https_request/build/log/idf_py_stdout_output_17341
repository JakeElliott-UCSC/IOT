[1/9] Performing build step for 'bootloader'
[1/1] cd /home/ubuntu/esp/IOT/Lab7/https_request/build/bootloader/esp-idf/esptool_py && /home/ubuntu/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/ubuntu/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /home/ubuntu/esp/IOT/Lab7/https_request/build/bootloader/bootloader.bin
Bootloader binary size 0x5170 bytes. 0x2e90 bytes (36%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/https_request_example_main.c.obj
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable https_request.elf
[6/7] Generating binary image from built executable
esptool.py v4.8.dev4
Creating esp32c3 image...
Merged 2 ELF sections
Successfully created esp32c3 image.
Generated /home/ubuntu/esp/IOT/Lab7/https_request/build/https_request.bin
[7/7] cd /home/ubuntu/esp/IOT/Lab7/https_request/build/esp-idf/esptool_py && /home/ubuntu/.espressif/python_env/idf5.3_py3.10_env/bin/python /home/ubuntu/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/ubuntu/esp/IOT/Lab7/https_request/build/partition_table/partition-table.bin /home/ubuntu/esp/IOT/Lab7/https_request/build/https_request.bin
https_request.bin binary size 0xf3a00 bytes. Smallest app partition is 0x177000 bytes. 0x83600 bytes (35%) free.
